from abc import ABC


class Entity(ABC):

    """#Корневой абстрактный класс для всех существ и объектов существующих в симуляции"""

    pass


class Grass(Entity):

    """ресурс для травоядных"""

    pass


class Rock(Entity):

    """статичный объект"""

    pass


class Tree(Entity):

    """статичный объект"""

    pass


class Creature(Entity):

    """Абстрактный класс, наследуется от Entity. Существо, имеет скорость (сколько клеток может пройти за 1 ход),
     количество HP. Имеет абстрактный метод make_move() - сделать ход.
      Наследники будут реализовывать этот метод каждый по-своему"""

    def __init__(self, speed: int, hp: int) -> None:
        self.speed = speed
        self.hp = hp

    def make_move(self):
        pass


class Herbivore(Creature):
    """Травоядное, наследуется от Creature.
    Стремятся найти ресурс (траву), может потратить свой ход
    на движение в сторону травы, либо на её поглощение."""

    pass


class Predator(Creature):

    """Хищник, наследуется от Creature. В дополнение к полям класса Creature, имеет силу атаки.
    На что может потратить ход хищник:
    Переместиться (чтобы приблизиться к жертве - травоядному)
    Атаковать травоядное. При этом количество HP травоядного
    уменьшается на силу атаки хищника. Если значение HP жертвы опускается до 0, травоядное исчезает"""

    def __init__(self, power):
        self.power = power

    def move(self):
        pass

    def atack(self):
        pass